{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard",
  "type": "registry:block",
  "title": "Dashboard",
  "description": "A dashboard with sidebar and breadcrumbs, works by default with NextJS file-based routing.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "sidebar",
    "breadcrumb",
    "dropdown-menu",
    "avatar",
    "separator"
  ],
  "files": [
    {
      "path": "registry/dashboard/layout.tsx",
      "content": "import { AppSidebar } from \"@/registry/dashboard/components/app-sidebar\"\nimport { SiteHeader } from \"@/registry/dashboard/components/site-header\"\nimport {\n\tSidebarInset,\n\tSidebarProvider,\n} from \"@/components/ui/sidebar\"\n\nexport default function layout({ children }: { children: React.ReactNode }) {\n\treturn (\n\t\t<SidebarProvider\n\t\t\tstyle={\n\t\t\t\t{\n\t\t\t\t\t\"--sidebar-width\": \"calc(var(--spacing) * 72)\",\n\t\t\t\t\t\"--header-height\": \"calc(var(--spacing) * 12)\",\n\t\t\t\t} as React.CSSProperties\n\t\t\t}\n\t\t>\n\t\t\t<AppSidebar variant=\"inset\" />\n\t\t\t<SidebarInset>\n\t\t\t\t<SiteHeader />\n\t\t\t\t<div className=\"flex flex-1 flex-col\">\n\t\t\t\t\t<div className=\"@container/main flex flex-1 flex-col gap-2\">\n\t\t\t\t\t\t<div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</SidebarInset>\n\t\t</SidebarProvider>\n\t)\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/layout.tsx"
    },
    {
      "path": "registry/dashboard/page.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\n\nexport default function Page() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center justify-center gap-4 p-4\">\n\t\t\t<h1 className=\"text-3xl font-bold\">Dashboard</h1>\n\t\t\t<Button>Criar um novo projeto</Button>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "registry/dashboard/components/app-sidebar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { NavMain } from \"@/registry/dashboard/components/nav-main\"\nimport { NavSecondary } from \"@/registry/dashboard/components/nav-secondary\"\nimport { NavUser } from \"@/registry/dashboard/components/nav-user\"\nimport {\n\tSidebar,\n\tSidebarContent,\n\tSidebarFooter,\n\tSidebarHeader,\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport {\n\tChartBar,\n\tCircleHelp,\n\tFolder,\n\tLucideLayoutDashboard,\n\tSearch,\n\tSettings,\n\tUsers\n} from \"lucide-react\"\n\nconst data = {\n\tuser: {\n\t\tname: \"Tucupy\",\n\t\temail: \"email@tucupy.com\",\n\t\tavatar: \"https://avatars.githubusercontent.com/u/169272657?s=200&v=4\",\n\t},\n\tnavMain: [\n\t\t{\n\t\t\ttitle: \"Dashboard\",\n\t\t\turl: \"/dashboard\",\n\t\t\ticon: LucideLayoutDashboard,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Analytics\",\n\t\t\turl: \"/dashboard/analytics\",\n\t\t\ticon: ChartBar,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Projetos\",\n\t\t\turl: \"/dashboard/projetos\",\n\t\t\ticon: Folder,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Usuários\",\n\t\t\turl: \"/dashboard/usuarios\",\n\t\t\ticon: Users,\n\t\t},\n\t],\n\tnavSecondary: [\n\t\t{\n\t\t\ttitle: \"Configurações\",\n\t\t\turl: \"/dashboard/configuracoes\",\n\t\t\ticon: Settings,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Ajuda\",\n\t\t\turl: \"/dashboard/ajuda\",\n\t\t\ticon: CircleHelp,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Buscar\",\n\t\t\turl: \"#\",\n\t\t\ticon: Search,\n\t\t},\n\t],\n}\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n\treturn (\n\t\t<Sidebar collapsible=\"offcanvas\" {...props}>\n\t\t\t<SidebarHeader>\n\t\t\t\t<SidebarMenu>\n\t\t\t\t\t<SidebarMenuItem>\n\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\tclassName=\"data-[slot=sidebar-menu-button]:!p-1.5\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a href=\"/\">\n\t\t\t\t\t\t\t\t<span className=\"text-base font-semibold\">Tucupy Tecnologia</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t</SidebarMenu>\n\t\t\t</SidebarHeader>\n\t\t\t<SidebarContent>\n\t\t\t\t<NavMain items={data.navMain} />\n\t\t\t\t<NavSecondary items={data.navSecondary} className=\"mt-auto\" />\n\t\t\t</SidebarContent>\n\t\t\t<SidebarFooter>\n\t\t\t\t<NavUser user={data.user} />\n\t\t\t</SidebarFooter>\n\t\t</Sidebar>\n\t)\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/dashboard/components/nav-main.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n\tSidebarGroup,\n\tSidebarGroupContent,\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { CirclePlus, LucideIcon, Mail } from \"lucide-react\"\n\nexport function NavMain({\n\titems,\n}: {\n\titems: {\n\t\ttitle: string\n\t\turl: string\n\t\ticon?: LucideIcon\n\t}[]\n}) {\n\treturn (\n\t\t<SidebarGroup>\n\t\t\t<SidebarGroupContent className=\"flex flex-col gap-2\">\n\t\t\t\t<SidebarMenu>\n\t\t\t\t\t<SidebarMenuItem className=\"flex items-center gap-2\">\n\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\ttooltip=\"Quick Create\"\n\t\t\t\t\t\t\tclassName=\"bg-primary text-primary-foreground hover:bg-primary/90 hover:text-primary-foreground active:bg-primary/90 active:text-primary-foreground min-w-8 duration-200 ease-linear\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CirclePlus />\n\t\t\t\t\t\t\t<span>Criar novo</span>\n\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\tclassName=\"size-8 group-data-[collapsible=icon]:opacity-0\"\n\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Mail />\n\t\t\t\t\t\t\t<span className=\"sr-only\">Inbox</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t</SidebarMenu>\n\t\t\t\t<SidebarMenu>\n\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t<SidebarMenuItem key={item.title}>\n\t\t\t\t\t\t\t<SidebarMenuButton tooltip={item.title}>\n\t\t\t\t\t\t\t\t{item.icon && <item.icon />}\n\t\t\t\t\t\t\t\t<span>{item.title}</span>\n\t\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</SidebarMenu>\n\t\t\t</SidebarGroupContent>\n\t\t</SidebarGroup>\n\t)\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/dashboard/components/nav-secondary.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport {\n\tSidebarGroup,\n\tSidebarGroupContent,\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { LucideIcon } from \"lucide-react\"\n\nexport function NavSecondary({\n\titems,\n\t...props\n}: {\n\titems: {\n\t\ttitle: string\n\t\turl: string\n\t\ticon: LucideIcon\n\t}[]\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n\treturn (\n\t\t<SidebarGroup {...props}>\n\t\t\t<SidebarGroupContent>\n\t\t\t\t<SidebarMenu>\n\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t<SidebarMenuItem key={item.title}>\n\t\t\t\t\t\t\t<SidebarMenuButton asChild>\n\t\t\t\t\t\t\t\t<a href={item.url}>\n\t\t\t\t\t\t\t\t\t<item.icon />\n\t\t\t\t\t\t\t\t\t<span>{item.title}</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</SidebarMenu>\n\t\t\t</SidebarGroupContent>\n\t\t</SidebarGroup>\n\t)\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/dashboard/components/nav-user.tsx",
      "content": "\"use client\"\n\nimport {\n\tAvatar,\n\tAvatarFallback,\n\tAvatarImage,\n} from \"@/components/ui/avatar\"\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuGroup,\n\tDropdownMenuItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport {\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tuseSidebar,\n} from \"@/components/ui/sidebar\"\nimport { EllipsisVertical, LogOut, UserCircle } from \"lucide-react\"\n\nexport function NavUser({\n\tuser,\n}: {\n\tuser: {\n\t\tname: string\n\t\temail: string\n\t\tavatar: string\n\t}\n}) {\n\tconst { isMobile } = useSidebar()\n\n\treturn (\n\t\t<SidebarMenu>\n\t\t\t<SidebarMenuItem>\n\t\t\t\t<DropdownMenu>\n\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\tclassName=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n\t\t\t\t\t\t\t\t<AvatarImage src={user.avatar} alt={user.name} />\n\t\t\t\t\t\t\t\t<AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t<div className=\"grid flex-1 text-left text-sm leading-tight\">\n\t\t\t\t\t\t\t\t<span className=\"truncate font-medium\">{user.name}</span>\n\t\t\t\t\t\t\t\t<span className=\"text-muted-foreground truncate text-xs\">\n\t\t\t\t\t\t\t\t\t{user.email}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<EllipsisVertical className=\"ml-auto size-4\" />\n\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t<DropdownMenuContent\n\t\t\t\t\t\tclassName=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\n\t\t\t\t\t\tside={isMobile ? \"bottom\" : \"right\"}\n\t\t\t\t\t\talign=\"end\"\n\t\t\t\t\t\tsideOffset={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DropdownMenuLabel className=\"p-0 font-normal\">\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n\t\t\t\t\t\t\t\t<Avatar className=\"h-8 w-8 rounded-lg\">\n\t\t\t\t\t\t\t\t\t<AvatarImage src={user.avatar} alt={user.name} />\n\t\t\t\t\t\t\t\t\t<AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t<div className=\"grid flex-1 text-left text-sm leading-tight\">\n\t\t\t\t\t\t\t\t\t<span className=\"truncate font-medium\">{user.name}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"text-muted-foreground truncate text-xs\">\n\t\t\t\t\t\t\t\t\t\t{user.email}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</DropdownMenuLabel>\n\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t<DropdownMenuGroup>\n\t\t\t\t\t\t\t<DropdownMenuItem>\n\t\t\t\t\t\t\t\t<UserCircle />\n\t\t\t\t\t\t\t\tConta\n\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t</DropdownMenuGroup>\n\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t<DropdownMenuItem>\n\t\t\t\t\t\t\t<LogOut />\n\t\t\t\t\t\t\tSair\n\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t</DropdownMenu>\n\t\t\t</SidebarMenuItem>\n\t\t</SidebarMenu>\n\t)\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/dashboard/components/site-header.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { SidebarTrigger } from \"@/components/ui/sidebar\"\nimport {\n\tBreadcrumb,\n\tBreadcrumbItem,\n\tBreadcrumbLink,\n\tBreadcrumbList,\n\tBreadcrumbPage,\n\tBreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\"\nimport React from \"react\"\nimport { Search } from \"lucide-react\"\n\nexport function SiteHeader() {\n\tconst pathname = usePathname()\n\n\tconst segments = pathname.split(\"/\").filter(Boolean)\n\n\tconst breadcrumbs = segments.map((segment, index) => {\n\t\tconst path = `/${segments.slice(0, index + 1).join(\"/\")}`\n\t\tconst label = segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, \" \")\n\t\treturn { path, label }\n\t})\n\n\treturn (\n\t\t<header className=\"flex h-(--header-height) shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-(--header-height)\">\n\t\t\t<div className=\"flex w-full items-center gap-1 px-4 lg:gap-2 lg:px-6\">\n\t\t\t\t<SidebarTrigger className=\"-ml-1\" />\n\t\t\t\t<Separator\n\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\tclassName=\"mx-2 data-[orientation=vertical]:h-4\"\n\t\t\t\t/>\n\t\t\t\t<Breadcrumb>\n\t\t\t\t\t<BreadcrumbList>\n\t\t\t\t\t\t{breadcrumbs.map((breadcrumb, index) => (\n\t\t\t\t\t\t\t<React.Fragment key={breadcrumb.path}>\n\t\t\t\t\t\t\t\t<BreadcrumbItem>\n\t\t\t\t\t\t\t\t\t{index === breadcrumbs.length - 1 ? (\n\t\t\t\t\t\t\t\t\t\t<BreadcrumbPage>{breadcrumb.label}</BreadcrumbPage>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<BreadcrumbLink asChild>\n\t\t\t\t\t\t\t\t\t\t\t<Link href={breadcrumb.path}>{breadcrumb.label}</Link>\n\t\t\t\t\t\t\t\t\t\t</BreadcrumbLink>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t\t\t\t{index < breadcrumbs.length - 1 && <BreadcrumbSeparator />}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</BreadcrumbList>\n\t\t\t\t</Breadcrumb>\n\t\t\t\t<div className=\"ml-auto flex items-center gap-2\">\n\t\t\t\t\t<Button variant=\"ghost\" asChild className=\"hidden sm:flex\">\n\t\t\t\t\t\t<Search className=\"h-4 w-4 text-gray-500\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n",
      "type": "registry:component"
    }
  ]
}